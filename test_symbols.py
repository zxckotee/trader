#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å Bybit.
"""

import sys
from pathlib import Path

# Add src to path
sys.path.append(str(Path(__file__).parent / 'src'))

from src.data.bybit_parser import BybitParser


def main():
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤...")
    
    parser = BybitParser()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-20 —Å–∏–º–≤–æ–ª–æ–≤
    symbols = parser.get_popular_symbols(limit=20)
    
    print(f"\nüìà –¢–æ–ø-{len(symbols)} –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö USDT –ø–∞—Ä –ø–æ –æ–±—ä–µ–º—É —Ç–æ—Ä–≥–æ–≤:")
    print("-" * 50)
    
    for i, symbol in enumerate(symbols, 1):
        print(f"{i:2d}. {symbol}")
    
    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ {len(symbols)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –¢–µ—Å—Ç —Å–±–æ—Ä–∞ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
    if symbols:
        test_symbol = symbols[0]
        print(f"\nüß™ –¢–µ—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {test_symbol} (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π, –¥–Ω–µ–≤–Ω—ã–µ —Å–≤–µ—á–∏)...")
        
        try:
            df = parser.collect_historical_data(
                symbol=test_symbol,
                timeframe='1d',
                start_date='2024-10-10',
                end_date='2024-10-17'
            )
            
            if not df.empty:
                print(f"‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω: —Å–æ–±—Ä–∞–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π")
                print(f"üìÖ –ü–µ—Ä–∏–æ–¥: {df['timestamp'].min()} - {df['timestamp'].max()}")
                print(f"üí∞ –¶–µ–Ω–∞: {df['close'].iloc[0]:.2f} -> {df['close'].iloc[-1]:.2f}")
            else:
                print("‚ùå –¢–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è: –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")


if __name__ == "__main__":
    main()
